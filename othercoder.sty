\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{othercoder}[2017/07/01 Other Coder package]

\RequirePackage{fvextra}
\RequirePackage{luacode}
\RequirePackage{tikz}
\RequirePackage{xcolor}


% Defining the colours we will be using in the package
\definecolor{othercoderImportant}{rgb}{0.1,0.3,0.3}
\definecolor{othercoderUnimportant}{gray}{0.4}
\definecolor{othercoderBar}{gray}{0.7}
\definecolor{othercoderBox}{gray}{0.95}

% We have some fancy tikz-based commands
\newcommand*\othercoderCircled[1]{\tikz[baseline=(char.base)]{
    \node [ shape=circle
          , fill=othercoderImportant
          , draw=othercoderImportant
          , inner sep=1pt
          ] (char) {\textcolor{white}{\texttt{#1}}};
    }}

\newcommand*\othercoderBarred[1]{\tikz[overlay]{
    \node (rect)
        [ fill=othercoderBar
        , draw=othercoderBar
        , inner sep=1pt
        , minimum height=1.1\baselineskip
        , minimum width=3pt
        , shift={(0pt, 2pt)}
        ] {};
    }}

\newcommand\othercoderOnlyOn[2]{\only<#1>{#2}}

\newcommand\othercoderImportant[1]{\textbf{\textcolor{othercoderImportant}{#1}}}
\newcommand\othercoderUnimportant[1]{\textcolor{othercoderUnimportant}{#1}}

\directlua{require("othercoder")}

\newenvironment{othercoder}{%
    \directlua{othercoder_start_recording()}}{%
    \directlua{othercoder_stop_recording()}%
}

\newenvironment{othercoderboxed}{%
    \directlua{othercoderboxed_start_recording()}}{%
    \directlua{othercoderboxed_stop_recording()}%
}

% The user might want to use \circled and friends
\DeclareOption{withcommands}{
    \newcommand{\circled}{\othercoderCircled}
    \newcommand{\barred}{\othercoderBarred}
    \newcommand{\important}{\othercoderImportant}
    \newcommand{\unimportant}{\othercoderUnimportant}
}

% Set the font size depending on the maximum line length
\DeclareOption{autofontsize}{
    \directlua{othercoder_enable_auto_font_size()}
}

% Enable barred numbers to represent \only for beamer
\DeclareOption{beamer}{
    \directlua{othercoder_enable_beamer()}
}

% Enables the debugging output
\DeclareOption{debug}{
    \directlua{othercoder_enable_debug()}
}

% Enables the debugging output, including the generated latex code
\DeclareOption{debugfull}{
    \directlua{othercoder_enable_debug_full()}
}

% \ExecuteOptions{withcommands}

\ProcessOptions\relax

\setmonofont{Hack}[Scale=MatchLowercase]

\endinput
